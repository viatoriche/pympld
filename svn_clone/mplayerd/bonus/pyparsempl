#!/usr/bin/python
# -*- coding: utf-8 -*-

# config_start

SCROBBLE = 1 # 1 - On / 0 - Off
LANG = 'RU'
YOUR_COMMANDS = 1 # show def user_commands() if = 1 / 0 - off
# LANG = 'EN'

# config_end

import sys
import os


if LANG == 'RU': EV_PAUSE = 'ПРИОСТАНОВЛЕНО'
else: EV_PAUSE = 'PAUSE'

if LANG == 'RU': EV_VOLUME = 'Громкость'
else: EV_VOLUME = 'Volume'

if LANG == 'RU': EV_PLAYING = 'Воспроизведение'
else: EV_PLAYING = 'Playing'

EV_STREAM = 'ICY Info'

if LANG == 'RU': EV_PLAYBEGIN = 'Начало воспроизведения'
else: EV_PLAYBEGIN = 'Starting playback'

TAG_TITLE = 'Title: '
TAG_GENRE = 'Genre'
TAG_ARTIST = 'Artist: '
TAG_ALBUM = 'Album: '
TAG_WEBSITE = 'Website: '

P_TITLE = ''
P_GENRE = ''
P_ARTIST = ''
P_ALBUM = ''
P_WEBSITE = ''
P_FILENAME = ''

IS_RADIO = 0
SHOW = 0

# User commands for scrobbling etc...
def user_commands():
    os.system('sendxmobar "<fc=#35bdb5>'+P_ARTIST+'</fc> - <fc=#38bd35>'+P_TITLE+'</fc> <fc=#4840ed>['+P_GENRE+']</fc>"')
    os.system('tkabber_setstatus "mplayer: '+P_ARTIST+' - '+P_TITLE+' ['+P_GENRE+']"')

# Commands when mplayer stop
def commands_stop():
    os.system('sendxmobar ""')
    os.system('tkabber_setstatus ""')
    print 'Quit...'

def parse_mplayer_work():
    global P_TITLE
    global P_GENRE
    global P_ARTIST
    global P_ALBUM
    global P_WEBSITE
    global P_FILENAME

    global IS_RADIO
    global SHOW

    print 'Start parse stdin: '

    while 1:
        try: 
            line = raw_input()
        except:
            break

        line = line.strip()

        if line.find(EV_PAUSE) != -1: 
            print line            

        if line.find(EV_VOLUME) != -1:
            print line            

        if line.find(EV_PLAYING) != -1:
            P_FILENAME = line.replace(EV_PLAYING+' ','')            

        if line.find(EV_STREAM) != -1:
            SHOW = 1
            parsetext = line.replace('ICY Info: StreamTitle=\'','')
            parsetext = parsetext.replace('\';','')
            parsetext = parsetext.replace('StreamUrl=\'',' ')
            ICY = parsetext.split(' - ')
            if len(ICY) > 1:
                P_ARTIST = ICY[0]
                P_TITLE = ICY[1]
            else: 
                P_ARTIST = 'ICY'
                P_TITLE = parsetext
            IS_RADIO = 1
            SHOW = 1

        if line.find(EV_PLAYBEGIN) != -1:
            if IS_RADIO == 1: SHOW = 0
            else: SHOW = 1
 
        if line.find(TAG_TITLE) != -1:
            P_TITLE = line.replace(TAG_TITLE,'')

        if line.find(TAG_GENRE) != -1:
            parsetext = line.replace(TAG_GENRE,'')
            parsetext = parsetext.strip()
            if len(parsetext) > 1:
                if parsetext[0] == ':':
                    P_GENRE = parsetext[1:].strip()            
 
        if line.find(TAG_ARTIST) != -1:
            P_ARTIST = line.replace(TAG_ARTIST,'')

        if line.find(TAG_ALBUM) != -1:
            P_ALBUM = line.replace(TAG_ALBUM,'')

        if line.find(TAG_WEBSITE) != -1:
            P_WEBSITE = line.replace(TAG_WEBSITE,'')

        if SHOW == 1:
           SHOW = 0
           if P_FILENAME == '': P_FILENAME = 'Unknown_Filename'
           if P_ARTIST == '': P_ARTIST = 'Unknown_Artist'
           if P_GENRE == '': P_GENRE = 'Unknown_Genre'
           if P_ALBUM == '': P_ALBUM = 'Unknown_Album'
           if P_TITLE == '': P_TITLE = os.path.basename(P_FILENAME)

           print P_ARTIST+' -*- '+P_TITLE+' -*- '+P_GENRE

           if SCROBBLE == 1: os.system('lastfm --artist "'+P_ARTIST+'" --title "'+
                                       P_TITLE+'" --album "'+P_ALBUM+'" --length 500')
       
           if YOUR_COMMANDS == 1: user_commands()

           P_ARTIST = P_ALBUM = P_TITLE = P_FILENAME = ''
           if IS_RADIO == 0: P_GENRE = '' 

    
    commands_stop()

if __name__ == '__main__':
    parse_mplayer_work()
